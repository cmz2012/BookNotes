fast remote memory
FaRM 是一种使用RDMA来改善延迟和带宽的主存分布式计算平台，性能相比于使用TCP/IP主存系统的技术提升了一个数量级。
FaRM把集群中机器的主存作为一个共享地址空间。
FaRM提供两种机制来改善程序性能：在RDMA上的无锁读，支持收集对象和函数迁移来高效使用单机器事务。
它使用RDMA来直接访问共享地址空间的数据和高效的发送数据。
一个20台机器的集群每秒可以执行1.67亿次键值对查询，仅有31微秒的时延。

简介：
    因为把工作集数据全部载入主存中，消除了硬盘或闪存的中间耗费，使得程序可以随机访问小型数据，但是网络通信
    却成为了瓶颈。实验表明：使用TCP/IP的分布式内存计算比单机存储计算性能要差的多，虽然单机环境下数据访问请求代价很高。
    FaRM使用RDMA写来实现快速的消息传递原语，这比在相同以太网环境下比TCP/IP性能提高了一个数量级。使用单边RDMA读对于
    在大多数负载上出现的只读操作实现了两倍的性能改善。但是我们没有非常好的取得这样理想的性能。我们对操作系统和NIC驱动
    仔细的做优化和更改把性能提升了1/8。
    FaRM机器把数据存在主存中，也执行应用线程。这就可以进行局部性优化，这很重要因为访问局部内存比RDMA快23倍。
    线程能够使用ACID的事务而严格串行地在地址空间分配，读，写和释放对象而不需要担心对象的位置。
    事务使用利用RDMA优势带有经过优化的两级提交协议的乐观并发控制。将日志副本写到多个SSD上去，FaRM可以获得可用性
    和持续性，但也可以作为一个缓存。(？)
    FaRM提供两种机制来改善性能，这只需要对代码做一些局部修改：多次无锁读可以使用一次RDMA操作完成，并且这些读是由
    事务保证严格串行的；支持对象收集和函数迁移来允许应用程序把分布式事务替换成经过优化的单机事务。
    我们在FaRM上设计实现了一个新型哈希表算法，它把hopscotch哈希与链式化和关联性结合起来是的空间利用率高，同时只需要
    少量的RDMA读操作来应用于查询操作：在90%的并发上小型对象的读只需要1.04次RDMA读操作。
    通过利用FaRM对收集相关对象和函数迁移的支持，我们对插入，更新和移除操作进行优化。
    
通信原语：
    
    
