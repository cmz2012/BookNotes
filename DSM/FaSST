摘要：
    FaSST是一个基于RDMA支持有序性和持久性的分布式内存事务系统。
    现存的基于RDMA事务处理系统使用one-sided RDMA通信原语，因为它们能绕过远端CPU。
    这种设计选择带来一些缺点：1.设计分布式数据存储时，one-sided RDMA缺乏灵活性会降低性能和增加软件复杂度。
                            2.RDMA硬件的深层技术短板限制了在大规模集群的可扩展性。
简介：
    可序列化的分布式事务为像对象存储和在线事务处理系统的分布式系统设计提供强有力的编程抽象。
    虽然以前在这方面的工作为性能奉献了健壮的事务语义，最近的一些系统已经展现了数据中心的事务可以很快。
    关键因素就是高速网络和轻量级网络栈。这些系统的公共特征就是他们广泛使用one-sided RDMA操作，可以绕过远端cpu。
    在这片文章里，我们探求是否one-sided RDMA是不是设计事务处理系统的最佳选择。
    
    首先，在one-sided RDMA范式和访问远程数据存储的高效事务所需的能力之间存在分歧。
    one-sided RDMA只提供读，写和原子操作，而访问远程数据存储通常都涉及遍历数据结构如哈希表和B树。
    通常这些结构都包含一个用于快速查询的索引和实际的数据，需要两个或两个以上的RDMA读来访问数据。
    这会导致低带宽和高延迟，从远端cpu旁通而减少了网络处理器的节省（也就是说远端cpu负载减少了，但是网络处理器的负载增加了）
    克服这个分歧的关键方法就是展平数据结构(flatten)，要么去掉索引，要么把数据和索引合并在一起，或者在所有的服务器上缓存索引。
    
    其次，当前one-sided RDMA实现的以连接为导向的本性通常需要cpu核之间共享本地NIC queue pairs 获得扩展性，而本地每个核的RDMA吞吐量
    和绕过远端cpu获得的网络收益都减少了几分之一。
    通过two-sided 不可靠数据报消息的rpc，在消息处理上牵涉到远端cpu，比one-sided RDMA更加灵活，允许数据访问在单个往返内完成。
    FaSST：一个多对多的RPC系统  允许Doorbell batching（通过减少CPU初始化的 pcie总线事务数量来节省CPU周期）
