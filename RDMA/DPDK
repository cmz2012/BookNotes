网路的核心是报文的转发过程，linux网络是通过内核协议栈进行转发的，报文控制平面和数据转发平面没有分离，不适合处理大规模网络数据包，
  因为linux分为内核区和用户区，报文先进入内核区然后拷贝到用户区，供给上层应用程序处理。如果能让应用程序直接接管网络数据包处理，内存管理
  以及CPU调度，那么性能可以得到一个质的提升
  要提高网路报文转发，从如下几个方面着手：

　　1.控制层留给Linux做，其它数据层全部由应用程序来处理。
　　2.减少系统调度、系统调用、系统中断，上下文切换等
　　3.摒弃Linux内核协议栈，将数据包传输到用户空间定制协议栈
　　4.使用多核编程技术替代多线程，将OS绑在指定核上运行
　　5.针对SMP系统，使CPU尽量使用所在NUMA系统节点的内存，减少内存刷写
　　6.使用大页面，减少访问
　　7.采用无锁技术解竞争
  
  DPDK核心技术如下：

　　（1）通过UIO技术将报文拷贝到应用空间处理

　　（2）通过大页内存，降低cache miss ，提高命中率，进而cpu访问速度

　　（3）通过CPU亲和性，绑定网卡和线程到固定的core，减少cpu任务切换

　　（4）通过无锁队列，减少资源竞争
