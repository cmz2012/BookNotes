一个可扩展，高性能分布式文件系统 
Ceph通过用一个伪随机数据分布函数(CRUSH)替代分布表来最大化的分离数据与元数据管理，这个算法用于异构和动态不可靠的对象存储设备(OSD)集群
传统的解决方案（比如NFS）,以提供一个简单的模型,其中服务器端export文件系统,客户可把它映射到本地user-space。
虽然被广泛使用,但集中式的客户机/服务器模型已被证明是可扩展性的一个重要障碍。
最近越来越多的分布式文件系统采用了基于对象的存储架构,智能对象存储设备(OSD)取代传统硬盘, 
OSD可将CPU、网络、本地缓存与底层磁盘或RAID这些资源整合。OSD用大得多的读写字节大小范围(往往大小不等)的对象取代传统的块接口，
利用设备本身负责底层块分布。客户通常与元数据服务器交互(MDS)执行元数据操作(open、rename),而直接与OSD交互负责执行文件I / O(read，write),
显著改善整体的可伸缩性。
由于很少或根本没有分布元数据工作负载，系统采用这种模式仍然有可扩展性限制。
继续依赖传统文件系统的分布列表和inode表或不把智能利用到OSD上会进一步限制系统可扩展性、性能、可靠性和成本。
Ceph分离数据和元数据操作，通过CRUSH生成代替传统文件系统的文件分布表
Ceph直接解决扩展问题， 同时实现高性能、可靠性和可用性，是通过三个基本设计实现的:分离数据和元数据,动态分布式元数据管理和可靠的自动分布的对象存储
相比现有基于对象的文件系统取代长的文件块列表为对象列表, Ceph中完全消除分配列表的设计。
相反,文件数据条带化到可计算到的命名对象, 是通过CRUSH算法分配对象存储设备。
这样可通过一个文件计算(而不是查找)得到对象的名称和位置, 可避免维护和分发对象列表, 简化系统的设计, 并减少了元数据集群工作负载

动态分布式原数据管理：
因为文件系统元数据的操作占据典型文件系统一半的工作负载，所以有效率的元数据管理肯定能提高系统整体性能，Ceph利用了一个新的元数据集群架构，
基于动态子树划分，它适应性的智能的分配职责，可在十个甚至上百个MDS上管理文件系统目录结构，
一个动态的层次分明的分区在每MDS工作负载中被保留位置，可促进有效更新和预取，可共同提高工作负载性能，
值得注意的是，元数据服务器的负载分布是基于当前的访问状态，使Ceph能在任何工作负载之下有效的利用当前的MDS资源，获得近似线性扩展性能
