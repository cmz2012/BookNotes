一个用于大型RFID系统时间有效的信息收集协议
摘要 - 传感器使能的RFID技术已经产生了很多最近的行业兴趣。与小型化集成传感器，RFID标签不仅可以提供ID，能够实时地获得关于状态的相应信息物体或周围环境，这是有利的许多实际应用，如仓库管理等库存控制。在本文中，我们研究了如何做的问题设计有效的协议来收集这样的传感器信息许多标签在大型RFID系统中有很多读者部署。与信息收集不同小型RFID系统只有一台读写器，阅读器场景，每个读者必须首先找出哪些标签位于其询问区以便读取信息从他们。我们从两个类别的热身解决方案开始它们直接从现有的信息收集中扩展单读取器RFID系统的协议，并显示所有它们对于多读者信息不能很好地工作收集问题，由于其识别的无效率询问标签。然后，我们提出一个新的解决方案，称为基于布隆过滤器的信息收集协议（BIC）。在BIC中，可以有效地进行被询问的标签识别用分布式构建的Bloom过滤器实现显着地减少了通信开销协议执行时间。广泛的模拟表明BIC执行比所有的预热解决方案和它的执行时间在下限的3倍以内。

射频识别（RFID）系统[1]已部署用于各种应用，如仓库管理，库存控制和对象跟踪。 RFID系统通常由一个或多个读取器和一个大标签数量。 每个标签都有唯一的标识（ID）数字并附加到一个物理对象。 读者可以通过通信来识别或跟踪对象相应的标签。 实际上，操作距离RFID标签非常有限。 对于广泛使用的被动标签，它只有几英尺。 甚至对于享受的活跃标签更丰富的标签资源，阅读范围只是在秩序的100英尺[2]。 因此，在大规模RFID部署中，如仓库或超市，我们总是需要安装多个读卡器以确保整个覆盖地区。
显然，如何有效地收集这样的信息是a关键问题的传感器使能的RFID系统。 在这里纸，我们研究在多读者环境中的问题。

！！！时间效率是最重要的性能标准为这个信息收集问题的解决方案。 的原因在于RFID系统总是具有许多功能频繁执行，如计数对象数放置在某个区域，识别缺失的产品等等。 如果执行时间较长，则信息收集操作可能干扰其他排定的例程RFID系统的任务，这使得它不可能执行。 此外，短的执行时间可以使能定期收集信息，时间监控。

目前对RFID技术集中的研究对ID集合协议的设计从ID中读取ID大量具有最小执行时间的标签。 在最近几年来，一些研究兴趣转向了新的功能的RFID系统，如基数估计和缺失标签检测。 类似的信息收集问题先前由Chen等人 [6]和乔等et al。 [7]。 然而，他们提出的方案，阅读器RFID系统和几乎不工作，直接应用于多读取器RFID部署（参见第II节和IV）。 就我们所知，这论文是全面研究问题的第一件工作定时高效的信息收集协议设计多阅读器RFID系统

！！！在本文中，我们首先研究两类解决方案到多读者信息收集的问题，简单称为预热解决方案，直接从中扩展单读者现有的信息收集协议RFID系统。我们显示，由于显着的开销，所有这些在执行时间方面都不是有效的读取器以识别位于其询问区域中的标签。为了减少这种识别的开销，我们建议一种新颖的解决方案，称为基于Bloom过滤器的信息收集协议（BIC），其中布隆过滤器是分布式的，并有效地传输给读者识别所询问的标签。然后，读者使用散列功能以向每个询问的标签分配唯一的时隙用于传感器信息传输并最小化冲突。以这种方式，协议执行时间大大减少。通过广泛的模拟和性能分析，我们证明BIC优于所有的预热解决方案并且执行时间在下限的3倍以内

在文献中，已经进行了大量的研究关于RFID系统中的各种问题。许多现有工作浓度 - 讨论ID集合协议的设计，读取来自单读取器RFID系统中的所有标签的ID。的

！！！现有的ID收集协议可以分为三种大类：基于ALOHA的[8] - [12]，基于树的[13][14]和混合[15]。在[16]，Yang et al。
！！！调查ID-在多读者环境中的收集问题，其中不仅标签传输冲突，而且读者传输冲突。最近，一些研究兴趣转向了新的RFID系统功能。
在[17] - [21]，一些小说估计器被设计用于快速和准确地估计放置在给定区域中的不同标签的数量。 Li et al。在[22]和Zhang et al。在[23]中解决的问题识别缺失的标签的ID。安全和RFID系统的隐私问题在[24] - [26]中讨论。

！！！与我们的工作最相关的研究是[6]和[7]。在[6]中，Chen et al。设计两个协议，称为单哈希信息收集协议（SIC）和多哈希Infor-采集协议（MIC），读传感器生产数据来自大量具有最佳执行时间的标签。在[7]，Qiao et al。调查信息收集问题 - lem从能效的方面。标签排序提出了轮询协议（TOP）和增强版本用于读取器从子集中收集传感器信息标签在系统中具有最小的能量消耗。和我们一样在第一节中，他们的计划主要是设计对于单读取器RFID系统，并假设读者有已知其收集的标记的ID信息。但在一个大型RFID系统中有多个读者，由于有限的询问区和流动性的标签，这样的知识不可用于每个RFID读者。因此，他们的协议不能有效地解决多读者部署中的信息收集问题。

据我们所知，如何设计节省时间的信息多读取器RFID系统的收集协议仍然存在正在勘探。

！！！问题是为读者设计协议，从所询问的标签有选择地收集传感器信息在多读取器RFID系统中具有最小执行时间。在本文的其余部分，它也被称为多阅读器信息收集问题。解决方案对这个问题称为多读者信息收集协议。注意这里提到的信息包括不仅传感器读数集合而且映射从每个读数到读取发生的标签使得传感器数据可以准确地与之关联相应对象。多读者信息收集的问题是相当的不同于以前在单读者中研究的环境[6]，[7]：在只有一个读者的RFID系统中被部署，所有的标签将传输信息到同一个读者。但是在具有多个读取器的大型RFID系统中安装，标签位于不同的地理位置可以与不同的读者通信。由于有限询问区域的面积和标签的迁移率，尽管每个读取器可以获得来自的所有标签的ID数据库，它仍然不知道哪些标签是存在于其询问区域并且将报告传感器信息。因此，读者需要首先识别询问标签以便从它们收集信息，这使得多读者信息收集的问题更复杂和挑战性。在本文中，作为第一步，我们不考虑inter-在相邻的读者之间，只集中精力信息收集在一个读者和它的被询问之间标签。许多调度策略[16]，[30]，[31]提出处理读取器传输冲突，其中可以轻松地集成到我们的协议中实现高效信息收集。

！！！基于轮询的信息收集协议第一个基本协议称为基于Polling的Infor-采集协议（PIC）。 PIC由多个组成回合。在每轮中，读取器广播ID，并等待用于来自相应标签的响应。每个被询问标签继续侦听通信信道，直到它自己的ID。然后，标签将其信息发送到读者并不参加剩余的轮次。以来读者不知道哪些标签位于其中询问区域，它必须发出M中的所有ID才能找到退出询问的标签并从中收集信息。如果它在一段时间后没有检测到任何响应广播ID，其指示相应的标签不在询问区域，读者将立即终止当前轮次并开始一个新轮次。从上面的描述中，PIC的总执行时间可以计算为m×t id +（m-n）×τdet + n×τinf。这里，t id表示允许的时隙的长度来自读取器的标签ID的传输和τdet读取器确定所需的最小检测时间通信信道上的传输的存在。

！！！框架式开槽ALOHA信息收集Pro-tocolID收集协议可用于信息集合，如果每个标签背负传感器信息的时候它将ID发送给读取器。我们采取框架开槽基于ALOHA的信息收集协议（AIC）例。在AIC中，读取器首先发出请求消息到所有被询问的标签，其指定时间的数量时隙包含在以下帧中。每个标签单独并随机选择一个时隙来发送其ID和传感器信息给读者。如果只有一个标签在一个时间段内回复，读者可以成功接收信息。如果多个标签同时响应，a在读取器处可能发生碰撞。在这种情况下，涉及的标签将被确认在下一时间帧期间重新启动。类似的过程重复，直到N中的所有标签都报告它们信息给读者。已经证明了AIC的执行时间阅读器从n个标签收集信息是关于e×n×τ[6][32]，其中e是自然常数，τ是a的长度时隙，在该时隙期间标签能够发送ID并将传感器信息发送给读取器。

！！！多哈希信息收集协议
在[6]中，Chen et al。呈现单散列和多散列信息收集协议（SIC和MIC）阅读器RFID系统，这也可以被采纳来解决多阅读器信息收集问题。在这里，我们只考虑MIC，因为它是SIC的增强版本具有更好的性能。逐步执行MIC。在每个阶段，阅读器使用散列函数将标签映射到一个数字的时隙。只有具有一对一的插槽读取器为信息分配映射到标签传输。其他插槽只是浪费，以避免冲突。插槽分配由读者在每个阶段的开始，据此询问标签在后续过程中顺序报告其信息时隙时间帧。类似于PIC，因为读者没有知道被询问的标签集N，它必须分配一个时隙到M中的每个标签。如果分配给标签的时隙变为空，则认为标签不在询问中地区。协议将在M中的所有标签都结束后终止分配的时隙来发送它们的信息。MIC的预期执行时间可以表示为m32P×t id +mP s×τinf，其中P s表示a的概率标签被分配一个时隙以在其中发送其信息相位如果使用散列函数[6]。实际上，s = 7足够。在这种情况下，我们有P 7 = 86.1％和执行时间约为0.036×m×t id + 1.16×m×τinf


！！！正如我们在第三部分讨论的，多读者信息收集协议应该实现被询问的标签识别和传感器信息收集。 因此，任何多读者信息收集的总执行时间协议可以分为两部分：读者的时间找出所有被询问的标签在N和时间为标签，以向读者报告其信息。 IDPS和SIPS由于显着的时间开销而不是有效的识别至少（m-n）×的所询问的标签τdet和n×τid。 这里，τid表示长度标签的时隙，用于传输其ID。 因此，按顺序以最小化总协议执行时间，我们需要探索新技术为读者有效识别被询问的标签。

布隆过滤器是一种简单的空间效率概率数据表示集合和支持成员资格的结构查询[33]，[34]。 因此，如果集合N可以被发送到阅读器以Bloom过滤器的形式，门控标签识别可以显着减少，因此信息收集协议的执行时间。 但挑战是如何构建Bloom过滤器和传输在读取器没有读取器的情况下将过滤的数据传送给读取器也不是被询问的标签知道N.在这一节，我们提出基于布隆过滤器的信息收集协议（BIC）其利用同步的物理层传输以分布式构造所需的Bloom过滤并有效地识别被询问的标签。

本文研究有效收集的问题传感器信息从大型RFID系统中的标签其中部署了多个读取器。不同于单读取器RFID中的信息收集问题部署，在多读者环境中，每个读者需要在读取之前首先找出所有被询问的标签信息。热身解决方案是直接的从现有的单读者信息收集协议在所执行的时间方面不是有效的到用于识别所询问的标签的高开销。我们设计基于布隆过滤器的信息收集协议（BIC）。表示查询标签集的Bloom过滤器被分布地构造并传送到读取器，这显着减少了所询问的标签识别开销并提高多读取器的性能信息收集协议。广泛的模拟是以证明BIC的时间效率。结果显示BIC优于所有的热身解决方案和执行时间在下限的3倍以内。




大规模高效标签搜索协议RFID系统

摘要 - 射频识别（RFID）技术在库存管理，供应链，产品跟踪，运输和物流。 一个研究问题具有实际重要性的是搜索特定组的标签在大型RFID系统中。 时间效率是一个核心因素在设计标签搜索时必须考虑协议以确保可扩展性。 在本文中，我们设计了一个新的技术称为滤波向量，这可以显着减少在搜索处理期间的传输开销，从而缩短搜索时间。 基于这种技术，我们提出一个迭代标签搜索协议。 在每个回合中，我们过滤掉一些标签并最终在搜索时终止搜索过程结果满足精度要求。 仿真结果证明我们的协议执行得比最好的现有。

近年来，无线电的发展迅速频率识别（RFID）技术。它正在变越来越多地应用于各种应用，如库存管理，供应链，产品跟踪，运输等物流[1] - [5]。一般来说，RFID系统包括三个部件：一个或多个RFID读卡器，一大套的RFID标签，以及后端服务器。每个标记都具有唯一性ID来标识它所连接的对象。配备天线，标签能够发射和接收无线电信号，通过它与读取器的通信实现。因此，读者可以收集ID等来自位于其覆盖区域中的标签的有用信息，然后将收集的数据发送到后端服务器进一步处理。本文关注大型RFID中的标签搜索问题系统。我们用一个例子来说明这个问题。假设制造商怀疑其某些产品可能有缺陷，但这些产品已经分发在不同的仓库。制造商知道的ID标签附加到那些可疑产品，并想要召回他们进行进一步检查。因此制造商要求标签搜索：给定一组所需的标签ID，问题是在阅读器的覆盖区域中搜索标识属于该集合的标签。注意可能存在区域中的其他标签不属于该集合。满足严格的实时应用的延迟要求，时间效率是RFID标签的关键性能指标搜索问题。在我们的例子中，非常需要做在繁忙的仓库搜索快速搜索过程可能会干扰其他活动并离开仓库。研究这个唯一的先前工作问题被称为CATS [6]，然而它不工作在一些常见的条件下（例如，如果想要的大小集合远远大于覆盖区域中的标签数量的读者）。本文的主要贡献是快速标记搜索基于称为滤波向量的新技术的方法。滤波向量是紧凑的一维比特阵列从标签ID构造，其可以不仅用于标签过滤，还用于参数估计。使用过滤向量，我们设计，分析和评价一本小说迭代标签搜索协议，逐步改进搜索结果的准确性和减少每个的时间通过使用学习的信息迭代到最小来自先前的迭代。给定精度要求，迭代协议将在搜索结果满足时终止精度要求。我们显示我们的协议执行比CATS协议和其他替代品好得多我们用于比较。特别是，新的协议是能够在CATS协议的条件下有效工作不再工作。本文的其余部分组织如下。第二节给出系统模型和问题陈述。第三节简要介绍了以前的工作。第四节描述我们的新协议详细。第五节评估的性能我们的协议通过模拟。第六节介绍一些相关RFID工作。第七节得出结论。

RFID的基本技术已经存在了很长时间时间。在过去，许多研究集中在两个方面：（1）用于将ID从标签传输到的物理层技术RFID读取器更可靠，在更长的距离上，并使用更少能量; （2）用于提高速率的MAC层技术读者可以从标签收集ID。标签识别协议，其从RFID系统中的所有标签读取ID，主要分为两类。一个是基于ALOHA的[8]，[9][12] - [15]，另一种是树状的[16] - [19]。 ALOHA-基于协议的协议工作方式如下：读取器广播查询请求。以一定的概率，每个标签选择一个时隙在当前帧中传输其ID。如果有碰撞并且读者不肯定地确认，标签将继续参与下一个框架。此过程重复直到所有标签ID都已成功读取。基于树的协议组织ID前缀的树中的所有ID [16] - [19]。每个树前缀具有两个具有一个附加位“0”或的附加位的子节点'1'。标签ID是树的叶。 RFID读取器走通过树，并要求具有匹配前缀的标签传输其ID。另一个相关研究课题是基数估计RFID系统。 Kodialam和Nandagopal [20]估计基于概率计数方法的标签数量[21]。同一作者提出了一个无偏见的后续工作[22]。 Han et al。 [23]提高性能[20]。 Qian etet al。 [24]给出了彩票帧方案（LoF）进行估计多读者方案中的标签数量。工作在[25]使用最大似然法。 Sheng等人设计两种概率算法来识别大标签组[4]。

本文研究大规模的标签搜索问题RFID系统。 提高时间效率和消除限制了先前的标签搜索协议（CATS），我们提出基于新的迭代标签搜索协议（ITSP）技术称为滤波向量。 主要贡献我们的工作总结如下：（1）迭代法基于滤波向量的ITSP在减少方面是非常有效的在标签之间交换的信息量和阅读器，因此节省了搜索的时间处理; （2）ITSP执行得比现有的好多了解决方案; （3）ITSP在所有系统条件下工作良好，特别是在| X |的条件下 »| Y | 当CATS no更长的工作以及甚至失败。


识别大型RFID系统中的缺失标签

与传统条形码系统相比，RFID延伸从英寸到英尺数的操作距离（无源RFID标签）甚至几百英尺（有源RFID标签）。他们的无线传输，处理和存储能力使他们能够支持全自动化许多库存管理功能。这个论文研究了监控器的实际重要问题，一组大的RFID标签并识别缺失的RFID标签- 与缺少的标签相关联的对象是可能会失踪。此监视功能可能需要被频繁执行，因此应该被ef-在执行时间方面是有利的，正常库存操作。基于概率方法，我们设计了一系列缺少标签识别的方法，使用新技术来减少执行时间。我们最好的协议减少了检测的时间缺少标签88.9％或更多，协议。


考虑一个大的RFID系统的N个标签。每个标签car-
具有唯一的ID并且具有执行cer-以及与RFID通信阅读器。问题是设计高效的原型，cols为读者交换必要的信息标签以便识别丢失的标签。RFID系统可以使用电池供电的有源（或半无源）标签，具有长传输范围，或使用由被发射的无线电波供电的无源标签读者。为了支持高级管理功能，覆盖大面积，当使用无源标签时，我们期望安装一个读取器阵列来扩展cov-磨损。当有多个同步的读者时，我们逻辑上把它们当作一个。我们假设RFID读取器可以访问数据库它存储所有标签的ID。这个假设是必要的任何缺少标签检测协议。如果我们没有ID的标签，即使在读者直接收集ID后从标签，我们还不知道是否有任何一个缺失，让单独的那些缺少，因为缺少的标签做不发送他们的信息。如果标签ID是，则可以容易地满足该假设当新对象移入时读入数据库系统和它们从数据库中删除时对象被移出 - 这是一个典型的库存管理程序会做。即使这样的信息丢失由于数据库失败，我们可以恢复信息通过执行标签收集协议从中读取ID标签。在这种情况下，我们不会检测具有的标签已经失去了，因为我们没有办法知道他们存在在第一位。但是，现在我们有了剩余标记的ID，后面缺少的标记这个时间点会被检测到，不会通过昂贵的标签收集协议，但通过更有效的协议不久将提出。

阅读器和标签之间的通信是时间 - 开槽。读取器的信号将同步时钟标签。在我们的协议中，通信是由读者在请求和响应模式，其中读取器在时隙中发出请求，然后零，一或更多标签在后续时隙中响应。如果没有标签在一个插槽中响应，该插槽称为空。如果一个和只有一个标签响应，它被称为单身插槽。如果更多比一个标签响应，它是一个冲突时隙。进一步来说，如果k标签响应，其中k≥2，它被称为k-碰撞槽。单个或冲突时隙也称为非空槽。如果我们只需要确定一个插槽是否为空或非空，标签可以使用一位短响应 - '0'（空载波）表示空，“1”（空载波）空。如果我们需要确定一个时隙是否为空/ sin-gleton / collision，标签应该使用多位长响应。例如，Philips I-Code系统[14]需要10位以区分单个时隙与冲突时隙。对时隙进行分类的另一种方式是基于它们长度：标签槽，长响应槽和短响应插槽。标签槽的长度表示为t标签允许从读取器传输标签ID到标签或从标签到读取器。长度a长响应时隙表示为t 1，任务的长响应携带多比特信息。短响应时隙的长度表示为t s，允许传送仅携带一个的短响应位信息。显然，t s <t l <t标签。设计一个时间 - 高效协议，我们更喜欢使用短响应时隙通过长响应时隙或使用长响应时隙标签槽。在数值实例和模拟设置中本文中，我们确定t s，t l和t标签的值关于飞利浦I-Code系统的规范[14]。使用飞利浦I-Code系统的参数，可以显示t s = 0.4ms，t l = 0.8ms，t标签= 2.4ms（对于96位标签ID）在所需的等待时间之后（例如，传输）。

识别缺少的标签是一个未被调查的问题，lem具有实际重要性。正如我们在讨论介绍，只有现有的标签集合协议可以适应于解决这个问题。虽然他们是不是专门为识别目的而设计的缺少标签，我们使用它们作为性能基准展示一个特别设计的协议可以多少做得更好。在标签收集协议中，由于信号col-lision，每个标签可能必须传送其ID几次在RFID读取器正确接收ID之前。外汇-充足，在基于ALOHA的协议如DFSA [15]和EDFSA [16]，每个标签发送其ID 2.72次平均值，这是理论上的最佳值。之后标签发送其ID，它必须等待确认从读者。因为确认是二进制的响应（'1'表示正确接收，'0'表示其他），它可以是在短时间内完成。因此，预期协议执行时间为2.72N（t tag + t s）。

我们给出最小执行时间的下限任何协议都可能实现。 每个标签都必须发送至少一个短响应（一比特）以通知它存在以便避免被分类为丢失标签通过RFID读取器。 即使读取器不传输任何东西，标签传送其短的时间响应是Nt s，这是任何协议可以最好的实现。 这是不可能实现的，因为阅读器必须传输以协调协议执行。

要减少执行时间2.72N（t tag + t s）朝向下界Nt，我们的协议设计遵循两个一般指南。 首先，我们应该减少无线电碰撞，这样每个标签传输一次而不是多次。 通过做所以，我们可以从时间中去除常数因子2.72复杂。 第二，我们应该避免传输ID标签，每个都需要t标签。 聪明的协议设计可以能够用短响应替换ID传输，这需要短得多的时间t s。 此外，如果标签不传送他们的ID，来自的确认RFID读取器也可以移除。 正如我们将演示的在下一节中，有各种方式部分实现上述目标。 他们建立在彼此的顶部推性能越来越接近下限。

我们观察到，由于RFID读写器可以访问标签ID的数据库，它不必读这样的信息 - 直接从标签。 相反，它可以广播这些ID一个接一个。 在它发送ID之后，它等待用于携带ID的标签的短响应。 如果它接收响应，标签必须在系统中; oth-erwise，标签丢失。 每个标签的验证存在t tag + t s，总执行时间N（t tag + t s）。 这称为基线协议。 Compar-使用标签收集协议，它显着减少通过消除争用的执行时间标签。

我们提出了一个两阶段协议（TPP）来减少RFID读取器必须发送的标签ID的数量。协议包括两个阶段：帧阶段和a轮询阶段。帧相位验证a的存在大多数标签没有任何ID传输。在在该阶段的开始，RFID读取器发送请求hr，fi，其中r是随机数，f是帧大小。该帧由紧接在后的f个短响应时隙组成请求。每个标签被伪随机映射到一个插槽在索引H（id，r），其中id是标签的ID，H是哈希函数，其范围为[0..f -1]。标签发送短消息响应。因为读者知道所有的ID标签，它知道每个标签应该响应哪个插槽。因此，它知道空的单元素的位置冲突槽。如果一个插槽应该是单例，但阅读器发现它是空的，然后是映射到的标签插槽必须缺失。帧相位可以验证存在映射到单个时隙的所有标签。但是，它无法验证标签的存在映射到冲突时隙。文献中有许多有效的哈希函数。为了保持标签的电路简单，其哈希值可以从一个预先存储的随机位池：我们使用具有标签的ID的离线随机数生成器作为种子来生成200个随机位的字符串，即然后存储在标签中。 （注意，随机数gen-erator不由标签执行。）这些位形成逻辑环。 H（id，r）返回在rth之后的特定数量的位位在环中。 200个随机位提供200个不同的散列值，这是足够的我们的目的考虑到接下来的三个协议要求每个标签只执行一个哈希，我们的最终协议要求每个标记per-平均形成几个哈希。哈希值不再多当系统有50,000个标签时比17位。即使基于200个随机位的散列在我们的模拟 - 上述哈希设计没有任何限制对随机位的数量，以及大于的数200可以在必要时选择。轮询阶段执行基线协议标签映射到帧中的冲突时隙相。读者一个接一个地广播他们的ID。在接收到ID时，携带相同ID trans-缩短了响应时间，ence。接下来，我们将展示如何设置协议pa-参数f。我们的目标是找到f的最佳值最小化预期的协议执行时间。 exe-表示为T 1的TPP的滴注时间如下：


TPP可以进一步改进。假设有两个标签，x和y映射到帧相位中的冲突时隙。什么时候读卡器检测到插槽是非空的，它不能确定是否存在两个标签或仅存在其中一个。因此，它必须在轮询阶段广播两个ID。这种方法是低效的，因为携带的信息在冲突槽中完全未使用。进行碰撞槽有用，我们将通过删除它成为一个单一的插槽来自帧相位的两个标签之一。如果我们删除x从帧相位（使得它不传送任何短路响应），y有一个单例槽，因此它的存在可以验证。在轮询阶段，我们只需要广播x的ID（而不是x和y的ID）。我们的第三个协议，TPP / TP，也有两个阶段，但是轮询阶段在帧阶段之前。在轮询阶段，调用标签去除过程以确定设置不会参与帧相位的标签S.在此过程中，读取器首先将标记映射到插槽作为TPP的作用。对于每个k冲突时隙，它是随机的删除k - 1标签将槽转换为单例。的删除的标签插入到S.在所有冲突槽之后变成单身，读者广播的ID标签在S中一个接一个地验证它们的存在。什么时候标签接收到它的ID，它将发送一个短的响应和在帧阶段保持沉默。帧相位相同如在TPP中，除了S中的标签不参与。TPP / TP的执行时间，表示为T 2

为了进一步改善TPP / TR，我们观察当f相当大时，大多数冲突时隙是2-冲突槽。考虑任意的​​2冲突时隙两个标签被映射。如果标签发送短响应，读者不能区分以下两种情况：（1）两个标签存在和（2）仅存在一个标签。那是因为在任一种情况下，空位。然而，如果标签发送长响应，如果两个标签都存在，读取器将观察到冲突时隙，并且如果只存在一个标签，它将观察到单个槽。因此，观察预期的冲突时隙证实了这一点两个标签不会丢失，而观察到意外singleton槽意味着其中一个标签丢失（但我们做不知道哪一个丢失）。如果是预期的冲突时隙原来是空的，则两个标签都缺失。上述想法导致我们的第四个协议，TPP / CSTR，其具有三个阶段：轮询阶段，帧阶段和然后是另一个轮询阶段。在第一个开始轮询阶段，TPP / CSTR执行不同的标签删除过程：读者将标签映射到同一个插槽中方式作为TPP。对于k≥3的每个k-冲突时隙随机删除k-2标签将槽变为2-碰撞槽。删除的标签插入到S.在所有的碰撞后时隙变成2个冲突时隙，读取器广播S中的标签的ID一个接一个地验证它们存在。当标签接收到其ID时，它将发送a短响应并在帧阶段保持沉默。在帧阶段，不在S中的标签发送长响应。阅读器记录了ex-被定位为2个碰撞槽，但是变成单个。只有映射到这些插槽的标签不能是ver-ified。因此，在第二次轮询阶段帧阶段，读取器广播这些标签的ID验证其存在。TPP / CSTR的执行时间如下。

因为每个缺少的标签最多只能产生一个其中预期的2冲突时隙变成单独。 在在这种情况下，映射到该插槽的两个标签的ID将会在第二轮询阶段广播。 显然，当没有标签丢失（即，L = 0），则第二轮询阶段进行不存在，因为M = 0。由于M是未知的，读者不能确定使E（T 3）最小的f的最优值。 相反，挖掘使执行最小化的f的最优值第一轮询阶段的时间和帧相位。 这个是合理的，因为我们期望丢失标签事件是相对罕见。 如果协议每小时执行一次仓库和盗窃在一周内发生一次，则M = 0为168次执行。 对于一个执行时M 6 = 0，花费更多的时间是有道理的，以识别丢失对象。让T'3是第一次轮询的组合执行时间相位和帧相位。

在轮询阶段发送标签ID是一个ex-沉思。在我们的最终协议（IIP）中，我们删除轮询阶段都在一起。 IIP迭代执行帧相位。每个帧验证一部分的存在标签。它重复，直到收到短的答复所有存在的标签。其响应不是的标签收到必须缺失。令S是其存在已经被验证的标签的集合以前的帧。在帧开始之前，读者映射标签不在S中以相同的方式到帧的插槽作为TPP。当读者发送请求hr，fi到标签，它还发送包括的前帧矢量的f位，每个指示一个时隙的期望状态，“0”对于空或单例和'1'用于碰撞。回想一下标签映射到帧中的索引H（id，r）的时隙。由于读者知道所有标签，它有充分的知识它们是冲突时隙。如果标记知道它已映射到冲突时隙（即，预编码索引中的索引H（id，r）帧向量为'1'），它将以50％的概率决定不参与当前帧。更具体地，标签执行结果为“0”的另一散列H'（id，r）或“1”。只有当散列结果为'1'时，它才会参与在当前帧中通过在时隙发送短的响应H（id，r）。因为一半的标签映射到碰撞槽将不会参与，它有助于解决一些冲突时隙和把它们变成单身。知道所有的ID，读者也可以确定哪些标签不会参与，哪个碰撞槽会变成单身，其他标签将在这些单例中响应，从而进行验证。在标签在框架的插槽中响应之后，读者测量时隙的状态并构造后帧矢量，由f位组成，每个指示实际状态一个槽，'0'表示空或冲突，'1'表示单个。在单身插槽中响应的标签的存在被成功验证，并且读者将它们插入到S.然后它发送后帧矢量。如果标签看到了它的时隙是单独的（即，在索引H（id，r）的位）后帧矢量为'1'），它不会进一步参与协议执行。在发送后帧之后矢量，读取器以减小的尺寸开始下一帧因为留下的回复标签较少。当没有标签在帧中响应时，读取器将重复相同的帧与所有零的前帧向量，其基本上需要所有剩余的标签，如果有的话响应。如果仍然没有标签响应，协议终止。如果前帧或后帧矢量的大小太长，读取器将其划分为96位的段（等效于标签ID的长度），并在a中发送每个段大小为t标签的时隙。知道索引H（id，r），每个标签知道从哪个段应该寻找信息需要。在下面，我们确定每个的适当大小帧。帧大小为f的执行时间为

如果无线信道无错误，我们的所有协议都是能够识别任何缺失的标签。原因是，标签的标签可以被明确地验证RFID读取器明确地发送标签ID和轮询标记的响应，或通过隐式映射标记到时间帧中的单个时隙，其中标签可以 - 注意它的存在没有碰撞。我们的协议除外对于TPP / CSTR做的只是这样。他们或者分配每个标签单独插槽，或者显式地轮询标签的响应。唯一的例外情况是在TPP / CSTR：对于两个标签映射到预期的2冲突时隙，如果时隙证明确实是冲突，则验证槽。这显然是真的，因为没有其他标签被映射到插槽，并且如果两个标签中的一个没有响应，那么将不会发生碰撞。我们省略详细的正确性证明对于五个协议由于空间限制。但是，如果通道不是无错误的，它可能导致错误阳性和假阴性。这不仅是我们的真实协议，但也适用于其他人。例如，假设a缺少的标签映射到单个插槽。插槽是sup-形容为空。然而，如果假阳性可能发生RFID读取器由于高噪声而感测到忙信道。 Chan-nel错误也可能导致错误检测[13]它不是设计用于识别每个单独的缺失标签。偶尔的假阳性不会造成严重的问题因为丢失标签检测协议被执行，odically和一个由于错误而未被检测到的缺失标签在一个执行轮次中的正值将在稍后检测回合。如果通道误差很大，我们可以更换所有短响应槽在我们的协议与长响应插槽携带抗噪声的多位校验和标签。考虑一个缺失的标签，吨槽。假设标签发送其ID的10位校验和（对于GEN2标准为96位）。即使当插槽是非空的，如果读卡器没有收到正确的校验和，它不会确认标签的存在。的标签必须通过轮询阶段再次查询，或在IIP的情况，通过后续帧。当RFID读取器发射时发生假阴性要轮询其响应，但传输的标记的ID被通道错误和因此标签损坏不响应。在这种情况下，读者认为标签，其中没有丢失，不存在。假阴性也可以发生在以前的标签收集协议（第3.1节）。假设两个标签在它们的ID传输中冲突。的否定确认，来自读取器的标志“0”被改变为正的，标志为“1”，由于信道错误。当标签停止传输其ID时，读者将把他们当作缺失的。对于所有协议，false负片可以很容易地以同样的方式处理：读者执行额外的验证步骤，其轮询每个“丢失”标签来查看它是否响应。假阳性和假阴性也可能发生，如果标签在协议执行期间移入或移出系统。它们由上述方法处理。怎么样-为了减少由于正常的内部故障引起的假警报，文件操作，我们应该最小化执行时间。这是我们的协议享有显着的优势，因为下一节将通过模拟演示。

在本节中，我们评估基线的效率协议，TPP，TPP / TR，TPP / CSTR和IIP通过simula-。我们将我们的协议与最先进的技术进行比较协议在相关工作。他们是可信赖的读者协议（TRP）[13]，增强型动态帧时隙ted ALOHA（EDFSA）[16]和二叉树协议（BTP）[17]。使用两个性能度量：（1）执行时间的协议，在它识别所有缺少的标签，和（2）一个协议的执行时间，在它检测到之前缺少标签。第一个性能指标告诉我们多长时间它需要一个协议来确定哪些标签丢失。第二个指标告诉我们协议需要多长时间识别丢失标签事件。我们运行每个模拟100次不同随机种子和平均结果产生一个数据点。基于飞利浦I-Code系统的规格[14]，在所需的等待时间之后（例如，之间的间隙传输），读取器需要0.4ms，检测空槽，0.8ms以检测冲突或单独时隙和2.4ms，以传输96位ID。我们的协议除外对于TPP / CSTR只需要标识空和非空插槽。 TPP / CSTR必须识别空，单独和colli-sion插槽。因此，基线协议中的标签TPP，TPP / TR，IIP和TRP发送短响应，每个tak-t s = 0.4ms，并且TPP / CSTR中的标签发送长响应，每个采取t l = 0.8ms。 EDFSA和BTP要求标签传送它们的ID，每个取t标签= 2.4ms。除非另有说明，默认缺少的数量标签在模拟中是1。我们不模拟通道错误。正如我们所解释的在第4.6节中，如果必要，引起的假阳性可以通过替换短响应来处理信道错误具有长响应时隙的时隙，其可以使execu-我们的协议的时间。然而，这不会改变本文的基本结论是，即使在dou-bling，我们的执行时间仍然远远小于时代的其他协议，然后他们将通道错误转换为ac-计数


标签收集协议主要分为两类：
gories。一个是基于树的[17,18,19,20,21]，另一个是基于ALOHA的[22，16，15，6，23，24]。基于树的原 - cols组织ID前缀树中的所有ID [17,18,19]。每树中前缀有两个子节点有一个额外的位，'0'或'1'。标签ID是树的叶。 RFID读者走通过树。当它到达树内节点时，它查询具有由该节点表示的前缀的标签。当多个标签匹配前缀时，它们都将响应并引起碰撞。然后读者移动到子节点通过扩展前缀多一个位。如果为零或一个标签响应（在单标签的情况下，读取器接收到ID），它在树中向上移动并跟随下一个分支。另一个类型的基于树的协议尝试通过let-标签随机选择他们属于哪个分支[17,20,21]。基于ALOHA的协议工作如下。读者首先广播查询请求。每个标签选择一个时间插槽传输其ID。如果标签选择了一个插槽，则没有其他标签选择，它可以成功标识和将保持沉默的剩余的过程。如果多个标签trans-同时，响应是由于碰撞而乱码并需要重新传输。该过程终止当所有标签被成功标识。增强动态帧时隙ALOHA（EDFSA）[16]增加通过调整帧大小识别概率，限制帧中的响应标签的数量。标签估计[10,11,4,6,12]是另一个入口 - RFID系统中的重要问题。 Kodialam和Nandagopal[10]提出了概率模型来估计的数量标签。读者使用时隙ALOHA协议和计数空和冲突时隙的数量。基于获得信息，读取器生成估计。该过程重复，直到达到指定的精度。在[10]中估计器的缺点是读者应该知道大约标签的数量的大小估计。作者设计了一个增强的零基（EZB）估计器[11]，以解决约束上文提到的。 Qian et。 al [12]多读者方案的帧方案（LoF）。通过采用具有几何分布的哈希函数，复制不敏感估计协议实现高精度低，开销小。Tan，Sheng和Li [13]设计了信任读者协议（TRP）以概率α检测丢失标签事件当缺失标签的数量超过m时，其中α和m是系统参数。在TRP中，读取器广播随机数r和帧大小f。另外，接收随机数及其ID，每个标签伪随机地在帧中选择一个时隙进行回复。时隙表示为'0'如果没有标签在插槽中回复。否则，其被表示为“1”。在这样，读者可以生成'0'和'1'的位串从回复。因为读者知道所有的ID以及参数hr，fi，就能够确定结果bitstring为完整集。读取器比较位串生成从答复和bitstring生成的记录，并且将报告该组标签不完整如果发现不匹配。 TRP使用概率法选择帧大小，它是满足以下条件的最小值：fies系统精度要求。然而，TRP不能确定地检测缺失标签事件（即，α= 100％）更重要的是，它不能告诉哪些标签丢失。此外，当α接近1并且m小时（例如1或2），检测时间将极大。

在本文中，我们研究监测集的问题的RFID系统中的标签，。 这个问题的解决方案，在大型畜牧场的农产品管理应用，仓库和医院。 避免干扰其他正常操作，我们应该最小化执行时间的用于识别缺失标签的协议。 我们五个缺失标签检测协议越来越多更好的时间效率。 许多新的技术是引入协议，包括帧的混合轮询阶段，标签移除，碰撞敏感标签移除，和概率迭代帧相位。 这些新技术 - niques实现远远更小的缺少标签检测时间现有协议。
