  NP是一类求解很难的问题，但是证明一个解是不是正确的解很容易
  NP是非对称性概念
  定义：对于特定实例的解是不是正确的，证明方法很简单
  证明简单意味着，在多项式时间内可解
  
    NP问题的形式大多都是“是否存在。。。。？”，如果存在一个解，证据就是解本身，但是也有其他形式的NP问题。
  如果一个问题是P，有一个多项式级别的算法保证得到正确答案。如果输入是一个正确解，算法执行完毕会返回yes，这个算法的执行步骤就构成了证明
  因此，P包含于NP中。但P!=NP，因为寻找答案比验证答案难得多。
    本质上P是NP的子集，这一类问题因为存在一些数学性的insight而让我们避免了穷尽搜索。
  避免暴力搜索的方法有：将问题拆分成小块(快速傅立叶变换)，从更简单的形式出发来求解(最短路径)，贪心算法，改善解直到达到最优解，把问题演绎成
  我们已经知道解法的问题。
    另一方面，我们又很难知道我们是不是找到了最优解，也很难验证不存在有效的多项式时间算法。NP中最难的问题是互相等价的。
    （图的问题转换成布尔代数的问题）
    有两个问题A和B，如果存在多项式时间的算法能将A的实例转换成B的实例，我们就说A可以规约到B，写作A<=B。
    在这个情景下，B就至少和A一样难，因为如果我们能在多项式时间内解决B，那么我们同样也能在多项式时间内解决A。
    CNF：合取范式
  子集求和问题与整数划分问题本质上是等价的。
  
  NP的正式定义：
    NP是一类有以下形式的问题A：x是A的一个yes实例当且仅当存在一个w以至于(x,w)是B的一个实例，就(x,w)对而言，这里B是P中的一个decision问题
    且|W|=poly(|x|),w就是证据，certificate。
    
